{"version":3,"sources":["hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPYCard.tsx","views/Home/components/EarnAssetCard.tsx","hooks/useLotteryTotalPrizesUsd.ts","views/Home/components/WinCard.tsx","views/Home/Home.tsx","hooks/useTickets.ts","hooks/useTokenBalance.ts","utils/lotteryUtils.ts"],"names":["useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","useAllEarnings","balances","setBalance","res","fetchAllBalances","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","CardBusdValue","props","Block","styled","div","CakeHarvestBalance","TranslateString","useI18n","earningsSum","reduce","accum","earning","pow","toNumber","earningsBusd","multipliedBy","usePriceCakeBusd","CakeWalletBalance","cakeBalance","useTokenBalance","getCakeAddress","busdBalance","getBalanceNumber","StyledFarmStakingCard","Card","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","size","mb","src","alt","width","height","id","disabled","length","onClick","UnlockButton","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","StyledTotalValueLockedCard","TotalValueLockedCard","totalValue","useTotalValue","toFixed","mediaQueries","lg","CardMidContent","Heading","attrs","EarnAPYCard","farmsLP","useFarms","bnbPrice","usePriceBnbBusd","maxAPY","Number","MIN_VALUE","getHighestAPY","activeFarms","multiplier","calculateAPY","toLocaleString","slice","farmsToDisplay","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","tokenAmount","lpTotalInQuoteToken","cakeRewardPerBlock","CAKE_PER_BLOCK","times","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","apy","quoteTokenSymbol","QuoteToken","BUSD","CAKE","dual","cakeApy","dualApy","rewardPerBlock","plus","animation","variant","justifyContent","exact","activeClassName","to","mt","EarnAssetCard","activeNonCakePools","pools","pool","isFinished","tokenName","includes","latestPools","orderBy","assets","join","useLotteryTotalPrizesUsd","totalRewards","useTotalRewards","WinCard","lotteryPrize","Math","round","Hero","Cards","BaseLayout","sm","CTACards","Home","Page","as","FarmStakingCard","rewards","setRewards","lotteryContract","useLottery","getTotalRewards","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","ticketsContract","useLotteryTicket","getTotalClaim","claim","useWinningNumbers","winngNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","slowRefresh","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","tokenAddress","web3","useWeb3","contract","getBep20Contract","balanceOf","multiCall","abi","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","i","newCalls","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","decodeFunctionResult","multiBuy","price","numbersList","toString","send","from","on","tx","transactionHash","console","error","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","lotteryAbi","finanltokenIds","r","drawed","calls4","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","parseInt","historyNumbers","winningNumbers"],"mappings":"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","file":"static/js/10.f6ff328a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@babefinance/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport { Text } from '@babefinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n}\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      <CardBusdValue value={earningsBusd} />\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@babefinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(usePriceCakeBusd()).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      <CardBusdValue value={busdBalance} />\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@babefinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/lollypop.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/cake.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'Babe to Harvest')}:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'Babe in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting Babe')\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@babefinance/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'Babe Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Babe Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Babe Burned')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New Babe Block')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={10} />\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@babefinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useGetStats } from 'hooks/api'\nimport { useTotalValue } from '../../../state/hooks'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  const data = true;\n  const totalValue = useTotalValue()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(762, 'Total Value Locked (TVL)')}\n        </Heading>\n        {data ? (\n          <>\n            <Heading size=\"xl\">{`$${totalValue.toFixed(3)}`}</Heading>\n            <Text color=\"textSubtle\">{TranslateString(764, 'Across all LPs and Pudding Pools')}</Text>\n          </>\n        ) : (\n          <>\n            <Skeleton height={66} />\n          </>\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React, { useCallback, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@babefinance/uikit'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { QuoteToken } from 'config/constants/types'\nimport { useFarms, usePriceBnbBusd } from 'state/hooks'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n\n  const maxAPY = useRef(Number.MIN_VALUE)\n\n  const getHighestAPY = () => {\n    const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n\n    calculateAPY(activeFarms)\n\n    return (maxAPY.current * 100).toLocaleString('en-US').slice(0, -1)\n  }\n\n  const calculateAPY = useCallback(\n    (farmsToDisplay) => {\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n\n      farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD) {\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const cakeApy =\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\n        }\n\n        if (maxAPY.current < apy.toNumber()) maxAPY.current = apy.toNumber()\n\n        return apy\n      })\n    },\n    [bnbPrice, farmsLP],\n  )\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"#7645d9\">\n          {getHighestAPY() ? (\n            `${getHighestAPY()}% ${TranslateString(736, 'APR')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@babefinance/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#e953c9,#d94545);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAssetCard = () => {\n  const activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.tokenName.includes('Babe'))\n  const latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3)\n  // Always include CAKE\n  const assets = ['Babe', ...latestPools.map((pool) => pool.tokenName)].join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn\n        </Heading>\n        <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Pools\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/syrup\" id=\"pool-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalRewards } from './useTickets'\n\nconst useLotteryTotalPrizesUsd = () => {\n  const totalRewards = useTotalRewards()\n  const totalCake = getBalanceNumber(totalRewards)\n  const cakePriceBusd = usePriceCakeBusd()\n\n  return totalCake * cakePriceBusd.toNumber()\n}\n\nexport default useLotteryTotalPrizesUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@babefinance/uikit'\nimport { NavLink } from 'react-router-dom'\nimport useLotteryTotalPrizesUsd from 'hooks/useLotteryTotalPrizesUsd'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst WinCard = () => {\n  const lotteryPrize = Math.round(useLotteryTotalPrizesUsd()).toLocaleString()\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Lottery with\n        </Heading>\n        <CardMidContent color=\"#7645d9\">${lotteryPrize}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            up for grabs\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default WinCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@babefinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPYCard from 'views/Home/components/EarnAPYCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pan-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/babe-center.svg'), url('/images/babe-right.svg');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'BabeSwap')}\n        </Heading>\n        <Text>{TranslateString(578, 'The #1 AMM and yield farm on Binance Smart Chain.')}</Text>\n      </Hero>\n      <div>\n        <Cards>\n          <FarmStakingCard />\n          {/* <LotteryCard /> */}\n        </Cards>\n        <CTACards>\n          <EarnAPYCard />\n          <EarnAssetCard />\n          <WinCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n"],"sourceRoot":""}